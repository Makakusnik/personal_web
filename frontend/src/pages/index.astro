---
import Button from "../components/button.astro";
import "../styles/global.css";
import type { PersonalInfo, JobExperience, Skill } from "../types";
import { marked } from "marked";
import { strapiFetch } from "../utils/fetching";
import JobExperienceCard from "../components/job-experience-card.astro";
import { formatDate } from "../utils/date";
import SkillBadge from "../components/skill-badge.astro";

const data: {
  personalInfo: PersonalInfo;
} = {
  personalInfo: {
    firstName: "Marek",
    lastName: "Fodor",
    title: "Full-Stack Developer",
    shortDescription:
      "I'm a full-stack developer with a passion for building scalable and minimalistic user-friendly web applications.",
    longDescriptionMd: `# Professional Experience

With over 5 years of experience in software development, I specialize in creating efficient, scalable web applications.

## Areas of Expertise
My technical expertise spans across the full development stack, including extensive experience with front-end and back-end development. I work extensively with modern JavaScript frameworks and have deep knowledge of cloud technologies and infrastructure.

## Development Philosophy
My approach to development centers around writing clean, maintainable code while focusing on performance optimization. I'm dedicated to creating intuitive user experiences that delight end-users while maintaining robust and scalable backend systems.

Whether it's architecting complex systems or fine-tuning user interfaces, I bring a detail-oriented and systematic approach to every project.

## Continuous Growth
I'm constantly learning and adapting to new technologies, believing that staying current is key to delivering the best solutions.`,
    location: "Å½ilina, Slovakia",
    locationLatitude: "49.2167",
    locationLongitude: "18.7167",
  },
};

const markdownString = marked.parse(data.personalInfo.longDescriptionMd);

const { data: jobExperienceData } = await strapiFetch<JobExperience>(
  `/job-experiences?populate=*&sort=startDate:asc&locale=${"sk"}`,
);

const { data: skillData } = await strapiFetch<Skill>(`/skills`);
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Astro</title>
  </head>
  <body class="antialiased">
    <div class="flex flex-col min-h-screen">
      <header
        class="bg-secondary section-padding flex items-center min-h-[calc(100vh-5rem)]"
      >
        <div
          class="container mx-auto px-4 sm:px-6 lg:px-8 text-center md:text-left"
        >
          <h1
            class="text-5xl md:text-6xl lg:text-7xl font-extrabold tracking-tight mb-6"
          >
            Hi, I'm <span class="text-primary"
              >{data.personalInfo.firstName}</span
            >.
          </h1>
          <p
            class="text-2xl md:text-3xl text-muted-text mb-8 max-w-3xl mx-auto md:mx-0"
          >
            {data.personalInfo.title}
          </p>
          <p class="text-lg text-gray-700 mb-10 max-w-2xl mx-auto md:mx-0">
            {data.personalInfo.shortDescription}
          </p>
          <div
            class="space-x-0 md:space-x-4 space-y-4 md:space-y-0 flex flex-col sm:flex-row sm:justify-center md:justify-start"
          >
            <Button href="#projects" as="a"> View My Work </Button>
            <Button href="#contact" as="a" variant="secondary">
              Let's Connect
            </Button>
          </div>
        </div>
      </header>
      <main class="flex-grow">
        <section id="home" class="">
          <!-- Scroll placeholder -->
        </section>

        <section id="about" class="section-padding">
          <div class="container mx-auto px-4 sm:px-6 lg:px-8">
            <h2 class="text-4xl font-bold text-center mb-12">
              A Little About Me
            </h2>
            <div
              class="max-w-3xl mx-auto text-lg text-gray-700 space-y-6 leading-relaxed"
            >
              <article set:html={markdownString} />
            </div>
          </div>
        </section>
        <section id="experience" class="bg-secondary section-padding">
          <div class="container mx-auto px-4 sm:px-6 lg:px-8">
            <h2 class="text-4xl font-bold text-center mb-12">
              My Professional Journey
            </h2>
            <div class="grid md:grid-cols-2 gap-8 max-w-4xl mx-auto">
              {
                jobExperienceData &&
                  jobExperienceData.map((job) => (
                    <JobExperienceCard
                      roleFullText={job.roleFullText}
                      companyFullName={job.companyFullName}
                      company={job.company}
                      startDate={formatDate(job.startDate)}
                      endDate={
                        job.endDate ? formatDate(job.endDate) : "Present"
                      }
                      isCurrentJob={job.isCurrentJob}
                      shortDescriptionMd={job.shortDescriptionMd}
                    />
                  ))
              }
            </div>
          </div>
        </section>
        <section id="skills" class="section-padding">
          <div class="container mx-auto px-4 sm:px-6 lg:px-8">
            <h2 class="text-4xl font-bold text-center mb-12">
              Core Competencies
            </h2>
            <div class="flex flex-wrap justify-center gap-4 max-w-2xl mx-auto">
              {
                skillData.map((skill) => (
                  <SkillBadge
                    skillName={skill.skillName}
                    iconName={skill.iconName}
                  />
                ))
              }
            </div>
            <p class="text-center mt-8 text-muted-text">
              ...and always eager to learn more!
            </p>
          </div>
        </section>
      </main>
    </div>
  </body>
</html>
